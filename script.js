// script.js
console.log('‚úÖ script.js –∑–∞–≥—Ä—É–∂–µ–Ω');

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Firebase SDK (–∏—Å–ø–æ–ª—å–∑—É–µ–º compat –≤–µ—Ä—Å–∏–∏ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã)
// –≠—Ç–∏ —Å–∫—Ä–∏–ø—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –≤ index.html:
//  
//  

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
  apiKey: "AIzaSyAHl5EUnVHlIJLqsi_wfT14PkE-NClMtMU",
  authDomain: "academy-of-elements.firebaseapp.com",
  databaseURL: "https://academy-of-elements-default-rtdb.europe-west1.firebasedatabase.app",
  projectId: "academy-of-elements",
  storageBucket: "academy-of-elements.firebasestorage.app",
  messagingSenderId: "182622266003",
  appId: "1:182622266003:web:4e9836cffe58eb472c6366",
  measurementId: "G-5V7LG83DS3"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
firebase.initializeApp(firebaseConfig);
const database = firebase.database();

// –ü–æ–ª—É—á–µ–Ω–∏–µ user_id –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
const urlParams = new URLSearchParams(window.location.search);
const userId = urlParams.get('user_id');

if (!userId) {
  alert('‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞.');
  console.error('User ID not found in URL parameters');
  throw new Error('User ID not found in URL parameters');
}

console.log('üë§ User ID:', userId);

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let userData = null;
let buildingsConfig = {}; // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∞–Ω–Ω—ã–º–∏ –æ –∑–¥–∞–Ω–∏—è—Ö

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–¥–∞–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
function getBuildingsConfig() {
  // –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–ø–∏—è BUILDINGS_DATA –∏–∑ buildings_config.py
  // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ª—É—á—à–µ –ø–æ–ª—É—á–∞—Ç—å —ç—Ç–æ —Å —Å–µ—Ä–≤–µ—Ä–∞
  return {
    "library": {
      "name": "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞",
      "emoji": "üìö",
      "description": "–¶–µ–Ω—Ç—Ä –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π.",
      "can_build": false // –ù–µ–ª—å–∑—è —Å—Ç—Ä–æ–∏—Ç—å
    },
    "wizard_tower": {
      "name": "–ë–∞—à–Ω—è –º–∞–≥–æ–≤",
      "emoji": "üßô‚Äç‚ôÇÔ∏è",
      "description": "–£—Å–∏–ª–∏–≤–∞–µ—Ç –º–∞–≥–æ–≤ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–Ω–∏–º–∞—Ç—å –Ω–æ–≤—ã—Ö.",
      "can_build": false // –ù–µ–ª—å–∑—è —Å—Ç—Ä–æ–∏—Ç—å
    }, 
    "blessing_tower": {
      "name": "–ë–∞—à–Ω—è –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–π",
      "emoji": "üõê",
      "description": "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ—â–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏—è –¥–ª—è –º–∞–≥–æ–≤.",
      "can_build": true
    },
    "aom_generator": {
      "name": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ê–û–ú",
      "emoji": "üíé",
      "description": "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª—ã AOM - –æ—Å–Ω–æ–≤–Ω—É—é –≤–∞–ª—é—Ç—É.",
      "can_build": true
    },
    "pvp_arena": {
      "name": "PvP –ê—Ä–µ–Ω–∞",
      "emoji": "‚öîÔ∏è",
      "description": "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –±–æ–µ–≤ 1 –Ω–∞ 1 –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É autochess —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º.",
      "can_build": true
    },
    "defense_tower": {
      "name": "–ë–∞—à–Ω—è –∑–∞—â–∏—Ç—ã",
      "emoji": "üõ°Ô∏è",
      "description": "–ó–∞—â–∏—â–∞–µ—Ç –≥–æ—Ä–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –∏–∑—É—á–µ–Ω–Ω—ã–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è.",
      "can_build": true
    },
    "arcane_lab": {
      "name": "–ê—Ä–∫–∞–Ω—Å–∫–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è",
      "emoji": "‚öóÔ∏è",
      "description": "–£—Å–∫–æ—Ä—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π.",
      "can_build": true
    }
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Firebase
async function loadUserData() {
  try {
    console.log('üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Firebase...');
    const snapshot = await database.ref(`users/${userId}`).once('value');
    const data = snapshot.val();
    
    if (data) {
      userData = data;
      buildingsConfig = getBuildingsConfig(); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∑–¥–∞–Ω–∏–π
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', userData);
      updateUI();
    } else {
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      alert('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –±–æ—Ç–µ —Å–Ω–∞—á–∞–ª–∞.');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    alert('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firebase
async function saveUserData() {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è
    const dataToSave = {
      mana: userData.mana,
      crystals: userData.crystals,
      // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    };
    await database.ref(`users/${userId}`).update(dataToSave);
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ Firebase');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
    alert('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
    throw error;
  }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function updateUI() {
  if (!userData) return;

  document.getElementById('faction').textContent = userData.faction || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  document.getElementById('mana').textContent = userData.mana || 0;
  document.getElementById('crystals').textContent = userData.crystals || 0;

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏ –∑–¥–∞–Ω–∏–π
  updateBuildingsGrid();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ç–∫–∏ –∑–¥–∞–Ω–∏–π (—Ç–µ–ø–µ—Ä—å 3x3)
function updateBuildingsGrid() {
  const grid = document.getElementById('city-grid');
  if (!grid) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç city-grid –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM');
    return;
  }
  
  // –ò–∑–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å —Å–µ—Ç–∫–∏ –¥–ª—è 3x3
  grid.className = 'grid grid-3x3';
  grid.innerHTML = '';
  
  // –¢–µ–ø–µ—Ä—å 9 —è—á–µ–µ–∫ –≤–º–µ—Å—Ç–æ 49 (–¥–ª—è 3x3 —Å–µ—Ç–∫–∏)
  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º–∞—Å—Å–∏–≤ buildings_grid –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
  let buildingsGrid = userData.buildings_grid || Array(9).fill(null);
  
  // –ï—Å–ª–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å—à–µ 9 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –æ–±—Ä–µ–∑–∞–µ–º –¥–æ 9
  // –ï—Å–ª–∏ –º–µ–Ω—å—à–µ 9, –¥–æ–ø–æ–ª–Ω–∏–º null-–∞–º–∏ (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞)
  if (buildingsGrid.length > 9) {
    buildingsGrid = buildingsGrid.slice(0, 9);
  } else if (buildingsGrid.length < 9) {
    while (buildingsGrid.length < 9) {
      buildingsGrid.push(null);
    }
  }
  
  for (let i = 0; i < 9; i++) { // –í—Å–µ–≥–¥–∞ 9 –∏—Ç–µ—Ä–∞—Ü–∏–π –¥–ª—è 3x3
    const cell = document.createElement('div');
    cell.className = 'cell';
    cell.dataset.index = i;
    
    const buildingId = buildingsGrid[i];
    const construction = userData.construction || {};
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—Ç—Ä–æ–∏—Ç—Å—è –ª–∏ —á—Ç–æ-—Ç–æ –≤ —ç—Ç–æ–π —è—á–µ–π–∫–µ
    const isUnderConstruction = construction.active && 
                               construction.cell_index === i && 
                               construction.type === 'build';

    if (buildingId) {
      // –í —è—á–µ–π–∫–µ –µ—Å—Ç—å –∑–¥–∞–Ω–∏–µ
      cell.classList.add('built');
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–¥–∞–Ω–∏–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      const buildingConfig = buildingsConfig[buildingId];
      const buildingInfo = userData.buildings[buildingId];
      
      if (buildingConfig) {
        cell.textContent = buildingConfig.emoji || 'üèõÔ∏è';
        cell.title = `${buildingConfig.name} (—É—Ä–æ–≤–µ–Ω—å ${buildingInfo?.level || 1})`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –ø–æ ID –∑–¥–∞–Ω–∏—è –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
        cell.classList.add(`building-${buildingId}`);
      } else {
        cell.textContent = 'üèõÔ∏è';
        cell.title = `–ó–¥–∞–Ω–∏–µ (${buildingId})`;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –∑–¥–∞–Ω–∏—è
      cell.addEventListener('click', () => onBuildingClick(cell, buildingId, i));
    } else if (isUnderConstruction) {
      // –í —è—á–µ–π–∫–µ –∏–¥–µ—Ç –ø–æ—Å—Ç—Ä–æ–π–∫–∞
      cell.classList.add('under-construction');
      cell.textContent = 'üî®'; // –ó–Ω–∞—á–æ–∫ –º–æ–ª–æ—Ç–∫–∞
      cell.title = '–ò–¥–µ—Ç –ø–æ—Å—Ç—Ä–æ–π–∫–∞...';
      
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –ø—É–ª—å—Å–∞—Ü–∏–∏
      cell.classList.add('pulse');
    } else {
      // –ü—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
      cell.classList.add('empty');
      cell.textContent = '+';
      cell.title = '–ü—É—Å—Ç–∞—è —è—á–µ–π–∫–∞. –ö–ª–∏–∫–Ω–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ—Å—Ç—Ä–æ–∏—Ç—å.';
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –ø—É—Å—Ç–æ–π —è—á–µ–π–∫–∏
      cell.addEventListener('click', () => onEmptyCellClick(cell, i));
    }

    grid.appendChild(cell);
  }
}


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∑–¥–∞–Ω–∏—é
function onBuildingClick(cell, buildingId, cellIndex) {
  console.log(`üè¢ –ö–ª–∏–∫ –ø–æ –∑–¥–∞–Ω–∏—é: ${buildingId} –≤ —è—á–µ–π–∫–µ ${cellIndex}`);
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–¥–∞–Ω–∏–∏
  const buildingConfig = buildingsConfig[buildingId];
  const buildingInfo = userData.buildings[buildingId];
  
  if (!buildingConfig) {
    alert(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∑–¥–∞–Ω–∏–µ: ${buildingId}`);
    return;
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  let infoText = `üèõÔ∏è **${buildingConfig.name}**\n`;
  infoText += `üìù ${buildingConfig.description}\n`;
  infoText += `üìä –£—Ä–æ–≤–µ–Ω—å: ${buildingInfo?.level || 1}\n\n`;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ —É–ª—É—á—à–∏—Ç—å –∑–¥–∞–Ω–∏–µ
  const maxLevel = getBuildingMaxLevel(buildingId);
  const currentLevel = buildingInfo?.level || 1;
  
  if (currentLevel < maxLevel) {
    infoText += `‚¨ÜÔ∏è –ú–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –¥–æ —É—Ä–æ–≤–Ω—è ${currentLevel + 1}\n`;
    infoText += `–ö–æ–º–∞–Ω–¥–∞ –≤ –±–æ—Ç–µ: \`/upgrade ${buildingId} ${currentLevel + 1}\``;
  } else {
    infoText += `‚úÖ –ó–¥–∞–Ω–∏–µ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º —É—Ä–æ–≤–Ω–µ (${maxLevel})`;
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –æ–∫–Ω–µ –∏–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
  alert(infoText.replace(/\`/g, '')); // –£–±–∏—Ä–∞–µ–º markdown –¥–ª—è alert
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –ø—É—Å—Ç–æ–π —è—á–µ–π–∫–µ
function onEmptyCellClick(cell, cellIndex) {
  console.log(`‚ûï –ö–ª–∏–∫ –ø–æ –ø—É—Å—Ç–æ–π —è—á–µ–π–∫–µ: ${cellIndex}`);
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∑–¥–∞–Ω–∏–π
  const buildableBuildings = Object.entries(buildingsConfig).filter(
    ([id, data]) => data.can_build !== false
  );

  if (buildableBuildings.length === 0) {
    alert("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–¥–∞–Ω–∏–π –¥–ª—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏.");
    return;
  }

  let menuText = `üèóÔ∏è –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≤ —è—á–µ–π–∫–µ ${cellIndex}:\n`;
  buildableBuildings.forEach(([id, data], index) => {
    menuText += `${index + 1}. ${data.emoji} ${data.name}\n`;
  });
  menuText += `\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–¥–∞–Ω–∏—è (1-${buildableBuildings.length}):`;

  const choice = prompt(menuText);

  if (choice === null) return; // –û—Ç–º–µ–Ω–∞

  const selectedIndex = parseInt(choice, 10) - 1;
  if (isNaN(selectedIndex) || selectedIndex < 0 || selectedIndex >= buildableBuildings.length) {
    alert("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.");
    return;
  }

  const [selectedBuildingId, selectedBuildingData] = buildableBuildings[selectedIndex];
  console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø–æ—Å—Ç—Ä–æ–π–∫—É ${selectedBuildingId} –≤ —è—á–µ–π–∫–µ ${cellIndex}`);

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±—ç–∫–µ–Ω–¥
  initiateBuild(selectedBuildingId, cellIndex);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ—Å—Ç—Ä–æ–π–∫—É
async function initiateBuild(buildingId, cellIndex) {
  try {
    // URL –≤–∞—à–µ–≥–æ API endpoint –¥–ª—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏
    const apiUrl = 'http://127.0.0.1:8000/api/build'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL
    
    const response = await fetch(apiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        user_id: userId,
        building_id: buildingId,
        cell_index: cellIndex,
      }),
    });

    const data = await response.json();

    if (response.ok && data.success) {
      alert(`‚úÖ ${data.message}`); // –ò–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å UI
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ—Ç—Ä–∞–∑–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
      await loadUserData();
    } else {
      alert(`‚ùå –û—à–∏–±–∫–∞: ${data.detail || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ—Å—Ç—Ä–æ–π–∫—É:', error);
    alert('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getBuildingMaxLevel(buildingId) {
  // –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
  // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å —ç—Ç–æ –∏–∑ buildings_config
  const maxLevels = {
    "library": 1,
    "wizard_tower": 10,
    "blessing_tower": 5,
    "aom_generator": 20,
    "pvp_arena": 1,
    "defense_tower": 5,
    "arcane_lab": 15
  };
  return maxLevels[buildingId] || 1;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
document.addEventListener('DOMContentLoaded', function() {
  console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...');
  loadUserData();
});
